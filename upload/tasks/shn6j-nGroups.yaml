description: >-
  Write a function named `nGroups` that, given a list and a positive integer n
  (in that order) as inputs, divides that list up into sublists of length at
  most n. All but the last one should be of length n. For instance, given the
  inputs `[1,2,3,4,5,6,7,8]` and `3`, the function should return
  [[1,2,3],[4,5,6],[7,8]].
topics: [lists]
solution: |-
  def nGroups(l,num):
     if len(l)<=num:
       return [l]
     else:
       return ([l[0:num]]+nGroups(l[num:],num))
func: nGroups
args:
  - - [1, 2, 3, 4, 5, 6, 7]
    - 4
  - - [1, 2, 3, 4, 5, 6, 7]
    - 11
  - - [1, 2, 3, 4, 5, 6, 7]
    - 7
  - - [1, 2, 3, 4, 5, 6]
    - 1
  - - []
    - 4
  - - []
    - 2
    - 3
accepted: expect an email from Prof T about picking up your gift card
